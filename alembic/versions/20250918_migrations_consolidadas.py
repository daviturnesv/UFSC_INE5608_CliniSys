"""add refresh tokens and fila tables

Revision ID: 20250918_migrations_consolidadas
Revises: 20250825_refresh_tokens
Create Date: 2025-09-18 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '20250918_migrations_consolidadas'
down_revision = '20250825_refresh_tokens'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Criar enum types para fila
    tipo_atendimento_enum = postgresql.ENUM('triagem', 'consulta', name='tipo_atendimento')
    tipo_atendimento_enum.create(op.get_bind())
    
    status_fila_enum = postgresql.ENUM('aguardando', 'em_atendimento', 'concluido', 'cancelado', name='status_fila')
    status_fila_enum.create(op.get_bind())
    
    # Criar tabela fila_atendimento
    op.create_table('fila_atendimento',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('paciente_id', sa.Integer(), nullable=False),
        sa.Column('tipo', tipo_atendimento_enum, nullable=False),
        sa.Column('status', status_fila_enum, nullable=False),
        sa.Column('observacao', sa.String(length=255), nullable=True),
        sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('atualizado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['paciente_id'], ['pacientes.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fila_atendimento_paciente_id'), 'fila_atendimento', ['paciente_id'], unique=False)
    op.create_index(op.f('ix_fila_atendimento_status'), 'fila_atendimento', ['status'], unique=False)
    op.create_index(op.f('ix_fila_atendimento_tipo'), 'fila_atendimento', ['tipo'], unique=False)
    
    # Adicionar campo telefone na tabela pacientes se não existir
    try:
        op.add_column('pacientes', sa.Column('telefone', sa.String(length=20), nullable=True))
    except Exception:
        # Coluna já existe
        pass
    
    # Modificar tamanho do campo CPF em pacientes para suportar formatação
    try:
        op.alter_column('pacientes', 'cpf',
                       existing_type=sa.String(length=11),
                       type_=sa.String(length=14),
                       existing_nullable=False)
    except Exception:
        # Já foi modificado
        pass
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Remover tabela fila_atendimento
    op.drop_index(op.f('ix_fila_atendimento_tipo'), table_name='fila_atendimento')
    op.drop_index(op.f('ix_fila_atendimento_status'), table_name='fila_atendimento')
    op.drop_index(op.f('ix_fila_atendimento_paciente_id'), table_name='fila_atendimento')
    op.drop_table('fila_atendimento')
    
    # Remover enum types
    status_fila_enum = postgresql.ENUM(name='status_fila')
    status_fila_enum.drop(op.get_bind())
    
    tipo_atendimento_enum = postgresql.ENUM(name='tipo_atendimento')
    tipo_atendimento_enum.drop(op.get_bind())
    
    # Reverter campo CPF
    try:
        op.alter_column('pacientes', 'cpf',
                       existing_type=sa.String(length=14),
                       type_=sa.String(length=11),
                       existing_nullable=False)
    except Exception:
        pass
    
    # Remover campo telefone
    try:
        op.drop_column('pacientes', 'telefone')
    except Exception:
        pass
    
    # ### end Alembic commands ###